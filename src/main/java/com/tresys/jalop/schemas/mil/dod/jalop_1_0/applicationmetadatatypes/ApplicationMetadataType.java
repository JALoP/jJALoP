//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.03.06 at 10:05:13 AM EST 
//


package com.tresys.jalop.schemas.mil.dod.jalop_1_0.applicationmetadatatypes;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.tresys.jalop.schemas.org.w3._2000._09.xmldsig_.ManifestType;
import com.tresys.jalop.schemas.org.w3._2000._09.xmldsig_.SignatureType;


/**
 * If the application is adds a Signature element, they should also add a default namespace declaration to the this node. This node must also contain namespace declarations for any namespaces included in the CanonicalizationMethod and Transform elements. This ensures that this document may be embedded into another document without breaking the signatures, regardless of how namespaces are declared elsewhere.
 * 
 * <p>Java class for ApplicationMetadataType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ApplicationMetadataType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="EventID" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;choice>
 *           &lt;element ref="{http://www.dod.mil/jalop-1.0/applicationMetadataTypes}Syslog"/>
 *           &lt;element ref="{http://www.dod.mil/jalop-1.0/applicationMetadataTypes}Logger"/>
 *           &lt;element name="Custom" type="{http://www.w3.org/2001/XMLSchema}anyType"/>
 *         &lt;/choice>
 *         &lt;element ref="{http://www.dod.mil/jalop-1.0/applicationMetadataTypes}JournalMetadata" minOccurs="0"/>
 *         &lt;element ref="{http://www.w3.org/2000/09/xmldsig#}Signature" minOccurs="0"/>
 *         &lt;element ref="{http://www.w3.org/2000/09/xmldsig#}Manifest" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="JID" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ApplicationMetadataType", propOrder = {
    "eventID",
    "syslog",
    "logger",
    "custom",
    "journalMetadata",
    "signature",
    "manifest"
})
public class ApplicationMetadataType {

    @XmlElement(name = "EventID")
    protected String eventID;
    @XmlElement(name = "Syslog")
    protected SyslogType syslog;
    @XmlElement(name = "Logger")
    protected LoggerType logger;
    @XmlElement(name = "Custom")
    protected Object custom;
    @XmlElement(name = "JournalMetadata")
    protected JournalMetadataType journalMetadata;
    @XmlElement(name = "Signature", namespace = "http://www.w3.org/2000/09/xmldsig#")
    protected SignatureType signature;
    @XmlElement(name = "Manifest", namespace = "http://www.w3.org/2000/09/xmldsig#")
    protected ManifestType manifest;
    @XmlAttribute(name = "JID", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String jid;

    /**
     * Gets the value of the eventID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEventID() {
        return eventID;
    }

    /**
     * Sets the value of the eventID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEventID(String value) {
        this.eventID = value;
    }

    /**
     * Gets the value of the syslog property.
     * 
     * @return
     *     possible object is
     *     {@link SyslogType }
     *     
     */
    public SyslogType getSyslog() {
        return syslog;
    }

    /**
     * Sets the value of the syslog property.
     * 
     * @param value
     *     allowed object is
     *     {@link SyslogType }
     *     
     */
    public void setSyslog(SyslogType value) {
        this.syslog = value;
    }

    /**
     * Gets the value of the logger property.
     * 
     * @return
     *     possible object is
     *     {@link LoggerType }
     *     
     */
    public LoggerType getLogger() {
        return logger;
    }

    /**
     * Sets the value of the logger property.
     * 
     * @param value
     *     allowed object is
     *     {@link LoggerType }
     *     
     */
    public void setLogger(LoggerType value) {
        this.logger = value;
    }

    /**
     * Gets the value of the custom property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getCustom() {
        return custom;
    }

    /**
     * Sets the value of the custom property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setCustom(Object value) {
        this.custom = value;
    }

    /**
     * Gets the value of the journalMetadata property.
     * 
     * @return
     *     possible object is
     *     {@link JournalMetadataType }
     *     
     */
    public JournalMetadataType getJournalMetadata() {
        return journalMetadata;
    }

    /**
     * Sets the value of the journalMetadata property.
     * 
     * @param value
     *     allowed object is
     *     {@link JournalMetadataType }
     *     
     */
    public void setJournalMetadata(JournalMetadataType value) {
        this.journalMetadata = value;
    }

    /**
     * Applications may include a Signature element to sign this document. The Signature is validated against the XML Digital signature schema (http://www.w3.org/2000/09/xmldsig#) and JALoP does not impose any restrictions or limits on what an application may do. However, for greater interoperability, applications are encouraged to follow the scheme that follows.
     * 	The SignedInfo element must use the CanonicalizationMethod "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments".  Because this canonicalization excludes all namespaces by defaults, applications must include an InclusiveNamespaces elment that lists the prefixes used within the SignedInfo elmenet. Any SignatureMethod, except those using SHA1 digests, may be used. The recommended SignatureMethod is "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256".
     * 		The SignedInfo must contain a single Reference element. The Reference must have the URI "#xpointer(id('ID'))", where 'ID' is the JAL id of the ApplicationMetadata element. The reference element should have the following 2 transforms:
     * 	The first transform must use the Algorithm "http://www.w3.org/2000/09/xmldsig#enveloped-signature".
     * 	The second transform must use the Algorithm "http://www.w3.org/2001/10/xml-exc-c14n#WithComments". This transform must include an InclusiveNamespaces element with a PrefixList that contains every namespace prefix used in the document.
     * 	Registered namespaces (including their prefixes) may be obtained with the XPath expression "//namespace::*" .
     * 	Applications are encouraged, but not required to include the Signature element.
     * 
     * @return
     *     possible object is
     *     {@link SignatureType }
     *     
     */
    public SignatureType getSignature() {
        return signature;
    }

    /**
     * Sets the value of the signature property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignatureType }
     *     
     */
    public void setSignature(SignatureType value) {
        this.signature = value;
    }

    /**
     * The manifest allows a place for applications to embed digests for the data they submit to the JALoP local store. The manifest should contain a Reference elements for the payload (journal, audit or log data).
     * 
     * 	The Reference element for the payload (journal, audit, or log data) must have the URI "jalop:paylod". Applications may use any digest method listed at  http://www.w3.org/TR/xmldsig-core1/#sec-AlgID except SHA1.
     * 	If the payload is journal or log data, applications must not apply any transforms.  If the payload is audit data, the application must use the canonicalization method "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments", and must not apply any additional transforms.
     * 
     * 	Applications are encouraged, but not required to include this Manifest as it.
     * 
     * @return
     *     possible object is
     *     {@link ManifestType }
     *     
     */
    public ManifestType getManifest() {
        return manifest;
    }

    /**
     * Sets the value of the manifest property.
     * 
     * @param value
     *     allowed object is
     *     {@link ManifestType }
     *     
     */
    public void setManifest(ManifestType value) {
        this.manifest = value;
    }

    /**
     * Gets the value of the jid property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getJID() {
        return jid;
    }

    /**
     * Sets the value of the jid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setJID(String value) {
        this.jid = value;
    }

}
